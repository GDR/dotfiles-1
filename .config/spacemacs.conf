;; -*- mode: emacs-lisp -*-

(defun dotspacemacs/layers ()
  (setq-default
   dotspacemacs-distribution 'spacemacs
   dotspacemacs-enable-lazy-installation 'unused
   dotspacemacs-ask-for-lazy-installation t
   dotspacemacs-configuration-layer-path '()
   dotspacemacs-configuration-layers
   '(
     ;; Source control
     git
     github
     version-control

     ;; Completion, Linting, etc.
     spell-checking
     syntax-checking
     auto-completion

     ;; Lang
     d
     go
     nim
     lua
     html
     rust
     ruby
     swift
     c-c++
     python
     elixir
     clojure
     haskell
     systemd
     markdown
     vimscript
     dockerfile
     emacs-lisp
     extra-langs
     common-lisp

     ;; Notes
     org
     deft

     ;; Misc
     helm
     nlinum
     vinegar
     (shell :variables
            shell-default-height 30
            shell-default-position 'bottom))
   dotspacemacs-additional-packages '(editorconfig)
   dotspacemacs-excluded-packages '()
   dotspacemacs-delete-orphan-packages t))

(defun dotspacemacs/init ()
  (setq-default
   dotspacemacs-elpa-https t
   dotspacemacs-elpa-timeout 5
   dotspacemacs-check-for-update t
   dotspacemacs-editing-style 'vim
   dotspacemacs-verbose-loading nil
   dotspacemacs-startup-banner 'official
   dotspacemacs-startup-lists '(recents projects bookmarks)
   dotspacemacs-startup-recent-list-size 5
   dotspacemacs-scratch-mode 'text-mode
   dotspacemacs-themes '(solarized-dark
                         solarized-light
                         monokai)
   dotspacemacs-colorize-cursor-according-to-state t
   dotspacemacs-default-font '("Hack"
                               :size 14
                               :weight normal
                               :width normal
                               :powerline-scale 1.1)
   dotspacemacs-leader-key "SPC"
   dotspacemacs-emacs-leader-key "M-m"
   dotspacemacs-major-mode-leader-key ","
   dotspacemacs-major-mode-emacs-leader-key "C-M-m"
   dotspacemacs-emacs-command-key "SPC"
   dotspacemacs-distinguish-gui-tab nil
   dotspacemacs-remap-Y-to-y$ nil
   dotspacemacs-retain-visual-state-on-shift t
   dotspacemacs-ex-substitute-global nil
   dotspacemacs-default-layout-name "Default"
   dotspacemacs-display-default-layout nil
   dotspacemacs-auto-resume-layouts nil
   dotspacemacs-large-file-size 1
   dotspacemacs-auto-save-file-location 'cache
   dotspacemacs-max-rollback-slots 5
   dotspacemacs-helm-resize nil
   dotspacemacs-helm-no-header nil
   dotspacemacs-helm-position 'bottom
   dotspacemacs-enable-paste-transient-state nil
   dotspacemacs-which-key-delay 0.4
   dotspacemacs-which-key-position 'bottom
   dotspacemacs-loading-progress-bar t
   dotspacemacs-fullscreen-at-startup nil
   dotspacemacs-fullscreen-use-non-native nil
   dotspacemacs-maximized-at-startup nil
   dotspacemacs-active-transparency 90
   dotspacemacs-inactive-transparency 90
   dotspacemacs-show-transient-state-title t
   dotspacemacs-show-transient-state-color-guide t
   dotspacemacs-mode-line-unicode-symbols t
   dotspacemacs-smooth-scrolling t
   dotspacemacs-line-numbers t
   dotspacemacs-smartparens-strict-mode nil
   dotspacemacs-smart-closing-parenthesis nil
   dotspacemacs-highlight-delimiters 'all
   dotspacemacs-persistent-server nil
   dotspacemacs-search-tools '("ag" "pt" "ack" "grep")
   dotspacemacs-default-package-repository nil
   dotspacemacs-whitespace-cleanup 'all))

(defun dotspacemacs/user-init ()
  (when window-system
    ;; Desktop
    (when (string= system-name "phoebus.localdomain")
      (add-to-list 'default-frame-alist '(width . 136))
      (add-to-list 'default-frame-alist '(height . 36)))

    ;; Laptop
    (when (string= system-name "orion.localdomain")
      (add-to-list 'default-frame-alist '(fullscreen . maximized))))

  (setq-default rust-enable-racer t))

(defun dotspacemacs/user-config ()
  ;; Default variables
  (setq-default
   ;; Deft
   deft-directory "~/Documents/Notes"
   deft-extensions '("txt" "org" "md" "adoc")

   ;; UI
   neo-theme 'nerd
   powerline-default-separator 'bar)

  ;; EditorConfig
  (require 'editorconfig)
  (editorconfig-mode 1))

;; Do not write anything past this comment. This is where Emacs will
;; auto-generate custom variable definitions.
